/*
 * generated by Xtext
 */
package org.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.services.VideogenGrammarAccess;

public class VideogenParser extends AbstractContentAssistParser {
	
	@Inject
	private VideogenGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.ui.contentassist.antlr.internal.InternalVideogenParser createParser() {
		org.xtext.ui.contentassist.antlr.internal.InternalVideogenParser result = new org.xtext.ui.contentassist.antlr.internal.InternalVideogenParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getVarianteVideoAccess().getAlternatives(), "rule__VarianteVideo__Alternatives");
					put(grammarAccess.getVideoGenModelAccess().getGroup(), "rule__VideoGenModel__Group__0");
					put(grammarAccess.getMandatoryVideoSeqAccess().getGroup(), "rule__MandatoryVideoSeq__Group__0");
					put(grammarAccess.getOptionalVideoSeqAccess().getGroup(), "rule__OptionalVideoSeq__Group__0");
					put(grammarAccess.getAlternativeVideoSeqAccess().getGroup(), "rule__AlternativeVideoSeq__Group__0");
					put(grammarAccess.getVideodescAccess().getGroup(), "rule__Videodesc__Group__0");
					put(grammarAccess.getVideodescAccess().getGroup_3(), "rule__Videodesc__Group_3__0");
					put(grammarAccess.getVideodescAccess().getGroup_3_1(), "rule__Videodesc__Group_3_1__0");
					put(grammarAccess.getVideodescAccess().getGroup_3_2(), "rule__Videodesc__Group_3_2__0");
					put(grammarAccess.getVideodescAccess().getGroup_3_3(), "rule__Videodesc__Group_3_3__0");
					put(grammarAccess.getVideoGenModelAccess().getVariante_videosAssignment_2(), "rule__VideoGenModel__Variante_videosAssignment_2");
					put(grammarAccess.getMandatoryVideoSeqAccess().getVideoAssignment_1(), "rule__MandatoryVideoSeq__VideoAssignment_1");
					put(grammarAccess.getOptionalVideoSeqAccess().getVideoAssignment_1(), "rule__OptionalVideoSeq__VideoAssignment_1");
					put(grammarAccess.getAlternativeVideoSeqAccess().getVideoidAssignment_1(), "rule__AlternativeVideoSeq__VideoidAssignment_1");
					put(grammarAccess.getAlternativeVideoSeqAccess().getVideoAssignment_3(), "rule__AlternativeVideoSeq__VideoAssignment_3");
					put(grammarAccess.getVideodescAccess().getVideoidAssignment_1(), "rule__Videodesc__VideoidAssignment_1");
					put(grammarAccess.getVideodescAccess().getCheminAssignment_2(), "rule__Videodesc__CheminAssignment_2");
					put(grammarAccess.getVideodescAccess().getDureeAssignment_3_1_1(), "rule__Videodesc__DureeAssignment_3_1_1");
					put(grammarAccess.getVideodescAccess().getDescriptionAssignment_3_2_1(), "rule__Videodesc__DescriptionAssignment_3_2_1");
					put(grammarAccess.getVideodescAccess().getProbabiliteAssignment_3_3_1(), "rule__Videodesc__ProbabiliteAssignment_3_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.ui.contentassist.antlr.internal.InternalVideogenParser typedParser = (org.xtext.ui.contentassist.antlr.internal.InternalVideogenParser) parser;
			typedParser.entryRuleVideoGenModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public VideogenGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(VideogenGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
