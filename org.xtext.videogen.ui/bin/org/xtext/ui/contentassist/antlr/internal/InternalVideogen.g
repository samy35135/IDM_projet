/*
 * generated by Xtext
 */
grammar InternalVideogen;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.VideogenGrammarAccess;

}

@parser::members {
 
 	private VideogenGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(VideogenGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleVideoGenModel
entryRuleVideoGenModel 
:
{ before(grammarAccess.getVideoGenModelRule()); }
	 ruleVideoGenModel
{ after(grammarAccess.getVideoGenModelRule()); } 
	 EOF 
;

// Rule VideoGenModel
ruleVideoGenModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVideoGenModelAccess().getGroup()); }
(rule__VideoGenModel__Group__0)
{ after(grammarAccess.getVideoGenModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarianteVideo
entryRuleVarianteVideo 
:
{ before(grammarAccess.getVarianteVideoRule()); }
	 ruleVarianteVideo
{ after(grammarAccess.getVarianteVideoRule()); } 
	 EOF 
;

// Rule VarianteVideo
ruleVarianteVideo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarianteVideoAccess().getAlternatives()); }
(rule__VarianteVideo__Alternatives)
{ after(grammarAccess.getVarianteVideoAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMandatoryVideoSeq
entryRuleMandatoryVideoSeq 
:
{ before(grammarAccess.getMandatoryVideoSeqRule()); }
	 ruleMandatoryVideoSeq
{ after(grammarAccess.getMandatoryVideoSeqRule()); } 
	 EOF 
;

// Rule MandatoryVideoSeq
ruleMandatoryVideoSeq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getGroup()); }
(rule__MandatoryVideoSeq__Group__0)
{ after(grammarAccess.getMandatoryVideoSeqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalVideoSeq
entryRuleOptionalVideoSeq 
:
{ before(grammarAccess.getOptionalVideoSeqRule()); }
	 ruleOptionalVideoSeq
{ after(grammarAccess.getOptionalVideoSeqRule()); } 
	 EOF 
;

// Rule OptionalVideoSeq
ruleOptionalVideoSeq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getGroup()); }
(rule__OptionalVideoSeq__Group__0)
{ after(grammarAccess.getOptionalVideoSeqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternativeVideoSeq
entryRuleAlternativeVideoSeq 
:
{ before(grammarAccess.getAlternativeVideoSeqRule()); }
	 ruleAlternativeVideoSeq
{ after(grammarAccess.getAlternativeVideoSeqRule()); } 
	 EOF 
;

// Rule AlternativeVideoSeq
ruleAlternativeVideoSeq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getGroup()); }
(rule__AlternativeVideoSeq__Group__0)
{ after(grammarAccess.getAlternativeVideoSeqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVideodesc
entryRuleVideodesc 
:
{ before(grammarAccess.getVideodescRule()); }
	 ruleVideodesc
{ after(grammarAccess.getVideodescRule()); } 
	 EOF 
;

// Rule Videodesc
ruleVideodesc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVideodescAccess().getGroup()); }
(rule__Videodesc__Group__0)
{ after(grammarAccess.getVideodescAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__VarianteVideo__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarianteVideoAccess().getMandatoryVideoSeqParserRuleCall_0()); }
	ruleMandatoryVideoSeq
{ after(grammarAccess.getVarianteVideoAccess().getMandatoryVideoSeqParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVarianteVideoAccess().getOptionalVideoSeqParserRuleCall_1()); }
	ruleOptionalVideoSeq
{ after(grammarAccess.getVarianteVideoAccess().getOptionalVideoSeqParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getVarianteVideoAccess().getAlternativeVideoSeqParserRuleCall_2()); }
	ruleAlternativeVideoSeq
{ after(grammarAccess.getVarianteVideoAccess().getAlternativeVideoSeqParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__VideoGenModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGenModel__Group__0__Impl
	rule__VideoGenModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGenModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenModelAccess().getVideoGenKeyword_0()); }

	'VideoGen' 

{ after(grammarAccess.getVideoGenModelAccess().getVideoGenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGenModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGenModel__Group__1__Impl
	rule__VideoGenModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGenModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenModelAccess().getLEFT_BRACKETTerminalRuleCall_1()); }
	RULE_LEFT_BRACKET
{ after(grammarAccess.getVideoGenModelAccess().getLEFT_BRACKETTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGenModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGenModel__Group__2__Impl
	rule__VideoGenModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGenModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVideoGenModelAccess().getVariante_videosAssignment_2()); }
(rule__VideoGenModel__Variante_videosAssignment_2)
{ after(grammarAccess.getVideoGenModelAccess().getVariante_videosAssignment_2()); }
)
(
{ before(grammarAccess.getVideoGenModelAccess().getVariante_videosAssignment_2()); }
(rule__VideoGenModel__Variante_videosAssignment_2)*
{ after(grammarAccess.getVideoGenModelAccess().getVariante_videosAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGenModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGenModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGenModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenModelAccess().getRIGHT_BRACKETTerminalRuleCall_3()); }
	RULE_RIGHT_BRACKET
{ after(grammarAccess.getVideoGenModelAccess().getRIGHT_BRACKETTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MandatoryVideoSeq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryVideoSeq__Group__0__Impl
	rule__MandatoryVideoSeq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryVideoSeq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getMandatoryKeyword_0()); }

	'mandatory' 

{ after(grammarAccess.getMandatoryVideoSeqAccess().getMandatoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MandatoryVideoSeq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryVideoSeq__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryVideoSeq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getVideoAssignment_1()); }
(rule__MandatoryVideoSeq__VideoAssignment_1)
{ after(grammarAccess.getMandatoryVideoSeqAccess().getVideoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalVideoSeq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalVideoSeq__Group__0__Impl
	rule__OptionalVideoSeq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalVideoSeq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getOptionalKeyword_0()); }

	'optional' 

{ after(grammarAccess.getOptionalVideoSeqAccess().getOptionalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalVideoSeq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalVideoSeq__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalVideoSeq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getVideoAssignment_1()); }
(rule__OptionalVideoSeq__VideoAssignment_1)
{ after(grammarAccess.getOptionalVideoSeqAccess().getVideoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlternativeVideoSeq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeVideoSeq__Group__0__Impl
	rule__AlternativeVideoSeq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeVideoSeq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getAlternativeKeyword_0()); }

	'alternative' 

{ after(grammarAccess.getAlternativeVideoSeqAccess().getAlternativeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeVideoSeq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeVideoSeq__Group__1__Impl
	rule__AlternativeVideoSeq__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeVideoSeq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getVideoidAssignment_1()); }
(rule__AlternativeVideoSeq__VideoidAssignment_1)?
{ after(grammarAccess.getAlternativeVideoSeqAccess().getVideoidAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeVideoSeq__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeVideoSeq__Group__2__Impl
	rule__AlternativeVideoSeq__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeVideoSeq__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
	RULE_LEFT_BRACKET
{ after(grammarAccess.getAlternativeVideoSeqAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeVideoSeq__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeVideoSeq__Group__3__Impl
	rule__AlternativeVideoSeq__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeVideoSeq__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getVideoAssignment_3()); }
(rule__AlternativeVideoSeq__VideoAssignment_3)
{ after(grammarAccess.getAlternativeVideoSeqAccess().getVideoAssignment_3()); }
)
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getVideoAssignment_3()); }
(rule__AlternativeVideoSeq__VideoAssignment_3)*
{ after(grammarAccess.getAlternativeVideoSeqAccess().getVideoAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeVideoSeq__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeVideoSeq__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeVideoSeq__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getRIGHT_BRACKETTerminalRuleCall_4()); }
	RULE_RIGHT_BRACKET
{ after(grammarAccess.getAlternativeVideoSeqAccess().getRIGHT_BRACKETTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Videodesc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group__0__Impl
	rule__Videodesc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getVideoKeyword_0()); }

	'video' 

{ after(grammarAccess.getVideodescAccess().getVideoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group__1__Impl
	rule__Videodesc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getVideoidAssignment_1()); }
(rule__Videodesc__VideoidAssignment_1)?
{ after(grammarAccess.getVideodescAccess().getVideoidAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group__2__Impl
	rule__Videodesc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getCheminAssignment_2()); }
(rule__Videodesc__CheminAssignment_2)
{ after(grammarAccess.getVideodescAccess().getCheminAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getGroup_3()); }
(rule__Videodesc__Group_3__0)?
{ after(grammarAccess.getVideodescAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Videodesc__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3__0__Impl
	rule__Videodesc__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getLEFT_BRACKETTerminalRuleCall_3_0()); }
	RULE_LEFT_BRACKET
{ after(grammarAccess.getVideodescAccess().getLEFT_BRACKETTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3__1__Impl
	rule__Videodesc__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getGroup_3_1()); }
(rule__Videodesc__Group_3_1__0)?
{ after(grammarAccess.getVideodescAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3__2__Impl
	rule__Videodesc__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getGroup_3_2()); }
(rule__Videodesc__Group_3_2__0)?
{ after(grammarAccess.getVideodescAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3__3__Impl
	rule__Videodesc__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getGroup_3_3()); }
(rule__Videodesc__Group_3_3__0)?
{ after(grammarAccess.getVideodescAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getRIGHT_BRACKETTerminalRuleCall_3_4()); }
	RULE_RIGHT_BRACKET
{ after(grammarAccess.getVideodescAccess().getRIGHT_BRACKETTerminalRuleCall_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Videodesc__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3_1__0__Impl
	rule__Videodesc__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getDureeKeyword_3_1_0()); }

	'duree' 

{ after(grammarAccess.getVideodescAccess().getDureeKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getDureeAssignment_3_1_1()); }
(rule__Videodesc__DureeAssignment_3_1_1)
{ after(grammarAccess.getVideodescAccess().getDureeAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Videodesc__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3_2__0__Impl
	rule__Videodesc__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getDescriptionKeyword_3_2_0()); }

	'description' 

{ after(grammarAccess.getVideodescAccess().getDescriptionKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getDescriptionAssignment_3_2_1()); }
(rule__Videodesc__DescriptionAssignment_3_2_1)
{ after(grammarAccess.getVideodescAccess().getDescriptionAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Videodesc__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3_3__0__Impl
	rule__Videodesc__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getProbabiliteKeyword_3_3_0()); }

	'probabilite' 

{ after(grammarAccess.getVideodescAccess().getProbabiliteKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Videodesc__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Videodesc__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getProbabiliteAssignment_3_3_1()); }
(rule__Videodesc__ProbabiliteAssignment_3_3_1)
{ after(grammarAccess.getVideodescAccess().getProbabiliteAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__VideoGenModel__Variante_videosAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenModelAccess().getVariante_videosVarianteVideoParserRuleCall_2_0()); }
	ruleVarianteVideo{ after(grammarAccess.getVideoGenModelAccess().getVariante_videosVarianteVideoParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryVideoSeq__VideoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getVideoVideodescParserRuleCall_1_0()); }
	ruleVideodesc{ after(grammarAccess.getMandatoryVideoSeqAccess().getVideoVideodescParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalVideoSeq__VideoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getVideoVideodescParserRuleCall_1_0()); }
	ruleVideodesc{ after(grammarAccess.getOptionalVideoSeqAccess().getVideoVideodescParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeVideoSeq__VideoidAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getVideoidIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAlternativeVideoSeqAccess().getVideoidIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeVideoSeq__VideoAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeVideoSeqAccess().getVideoVideodescParserRuleCall_3_0()); }
	ruleVideodesc{ after(grammarAccess.getAlternativeVideoSeqAccess().getVideoVideodescParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__VideoidAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getVideoidIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVideodescAccess().getVideoidIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__CheminAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getCheminSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getVideodescAccess().getCheminSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__DureeAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getDureeINTTerminalRuleCall_3_1_1_0()); }
	RULE_INT{ after(grammarAccess.getVideodescAccess().getDureeINTTerminalRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__DescriptionAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getDescriptionSTRINGTerminalRuleCall_3_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getVideodescAccess().getDescriptionSTRINGTerminalRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Videodesc__ProbabiliteAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideodescAccess().getProbabiliteINTTerminalRuleCall_3_3_1_0()); }
	RULE_INT{ after(grammarAccess.getVideodescAccess().getProbabiliteINTTerminalRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_LEFT_BRACKET : '{';

RULE_RIGHT_BRACKET : '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


